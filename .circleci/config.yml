version: 2.1

executors:
  docker19:
    docker:
    - image: docker:19

commands:
  check_if_changed:
    description: "Check if folder was changed. If no changes - skip tests, complete job"
    parameters:
      folder:
        type: string
    steps:
    - run: |
        CHANGES=$(git diff --name-only HEAD~1 << parameters.folder >>)
        echo == Changed files in << parameters.folder >>:
        echo "$CHANGES"
        echo ==
        if test -z "$CHANGES"; then
          echo "Changes were found in << parameters.folder >>, continue build"
        else
          echo "No changes in << parameters.folder >>, stop build"
          circleci step halt
        fi
  build_docker_image:
    description: "build docker image in specified context"
    parameters:
      context:
        type: string
      image:
        type: string
    steps:
    - run:
        name: Install local git and ssh client
        command: apk add --no-cache git openssh-client
    - setup_remote_docker
    - run:
        name: Docker Auth
        command: echo "${DOCKER_PASS}" | docker login --password-stdin --username "${DOCKER_USER}"
    - checkout
    - check_if_changed:
        folder: << parameters.context >>
    - run:
        name: Build and push docker image
        command: |
          BUILD_CONTEXT=<< parameters.context >>
          IMAGE=<< parameters.image >>
          TAG=$(cat ${BUILD_CONTEXT}/tag)
          docker build ${BUILD_CONTEXT} --tag "${IMAGE}:${TAG}"
          docker tag "${IMAGE}:${TAG}" "${IMAGE}:latest"
          docker push "${IMAGE}:${TAG}"
          docker push "${IMAGE}:latest"

workflows:
  version: 2
  build_docker_images:
    jobs:
    - sshct:
        context: gorilych
    - go-andrey:
        context: gorilych
    - dst:
        context: gorilych

jobs:
  sshct:
    executor: docker19
    steps:
    - build_docker_image:
        context: sshct
        image: gorilych/sshct

  go-andrey:
    executor: docker19
    steps:
    - build_docker_image:
        context: go-andrey
        image: gorilych/go-andrey
  dst:
    executor: docker19
    steps:
    - build_docker_image:
        context: dst
        image: gorilych/dst
