references:
  build_docker_image: &build_docker_image
    # Environment variables:
    # In context: DOCKER_USER, DOCKER_PASS
    # In job: BUILD_CONTEXT, IMAGE
    docker:
    - image: "docker:18"
    steps:
    - run:
        name: Install local git and ssh client
        command: apk add --no-cache git openssh-client
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Docker Auth
        command: echo "${DOCKER_PASS}" | docker login --password-stdin --username "${DOCKER_USER}"
    - checkout
    - run:
        name: Build and push docker image
        command: |
          # we need to check if there were changes in BUILD_CONTEXT
          # `git diff-tree ..` will show all files changed in current commit
          # `awk ..| sed ..` will print only directories
          # `grep -qxF` will success if BUILD_CONTEXT is found in directories
          # grep options:
          #  -q: Quiet. Return 0 if PATTERN is found, 1 otherwise
          #  -x: Match whole lines only
          #  -F: PATTERN is a literal (not regexp)
          if git diff-tree --no-commit-id --name-only -r HEAD \
             | awk '/\// {print}' | sed 's/\/.*//' \
             | grep -qxF "${BUILD_CONTEXT}"; then
            TAG=$(cat ${BUILD_CONTEXT}/tag)
            docker build ${BUILD_CONTEXT} --tag "${IMAGE}:${TAG}"
            docker tag "${IMAGE}:${TAG}" "${IMAGE}:latest"
            docker push "${IMAGE}:${TAG}"
            docker push "${IMAGE}:latest"
          else
            echo "No changes in ${BUILD_CONTEXT}/, skipping build"
          fi



version: 2

workflows:
  version: 2
  build_docker_images:
    jobs:
    - sshct:
        context: gorilych
    - go-andrey:
        context: gorilych
    - dst:
        context: gorilych


jobs:
  sshct:
    environment:
      BUILD_CONTEXT: sshct
      IMAGE: gorilych/sshct
    <<: *build_docker_image
  go-andrey:
    environment:
      BUILD_CONTEXT: go-andrey
      IMAGE: gorilych/go-andrey
    <<: *build_docker_image
  dst:
    environment:
      BUILD_CONTEXT: dst
      IMAGE: gorilych/dst
    <<: *build_docker_image
