references:
  build_docker_image: &build_docker_image
    # Environment variables:
    # In context: DOCKER_USER, DOCKER_PASS
    # In job: BUILD_CONTEXT, IMAGE
    docker:
    - image: "docker:19"
    steps:
    - run:
        name: Install local git and ssh client
        command: apk add --no-cache git openssh-client
    - setup_remote_docker
    - run:
        name: Docker Auth
        command: echo "${DOCKER_PASS}" | docker login --password-stdin --username "${DOCKER_USER}"
    - checkout
    - run:
        name: Build and push docker image
        command: |
          # we need to check if there were changes in BUILD_CONTEXT
          # `git diff-tree ..` will show all files changed in current commit
          # `awk ..| sed ..` will print only directories
          # `grep -qxF` will success if BUILD_CONTEXT is found in directories
          # grep options:
          #  -q: Quiet. Return 0 if PATTERN is found, 1 otherwise
          #  -x: Match whole lines only
          #  -F: PATTERN is a literal (not regexp)
          echo ========== Current dir
          pwd; ls -la
          echo ========== Changed files in the last commit
          git diff-tree --no-commit-id --name-only -r HEAD
          echo ========== Changed directories in the last commit
          git diff-tree --no-commit-id --name-only -r HEAD \
          | awk '/\// {print}' | sed 's/\/.*//' \
          | sort | uniq
          if git diff-tree --no-commit-id --name-only -r HEAD \
             | awk '/\// {print}' | sed 's/\/.*//' \
             | grep -qxF "${BUILD_CONTEXT}"; then
            TAG=$(cat ${BUILD_CONTEXT}/tag)
            docker build ${BUILD_CONTEXT} --tag "${IMAGE}:${TAG}"
            docker tag "${IMAGE}:${TAG}" "${IMAGE}:latest"
            docker push "${IMAGE}:${TAG}"
            docker push "${IMAGE}:latest"
          else
            echo "No changes in ${BUILD_CONTEXT}/, skipping build"
          fi



version: 2

workflows:
  version: 2
  build_docker_images:
    jobs:
    - sshct:
        context: gorilych
    - go-andrey:
        context: gorilych
    - dst:
        context: gorilych
    - httpbin:
        context: gorilych
    - deploy_httpbin:
        requires:
        - httpbin


jobs:
  sshct:
    environment:
      BUILD_CONTEXT: sshct
      IMAGE: gorilych/sshct
    <<: *build_docker_image
  go-andrey:
    environment:
      BUILD_CONTEXT: go-andrey
      IMAGE: gorilych/go-andrey
    <<: *build_docker_image
  dst:
    environment:
      BUILD_CONTEXT: dst
      IMAGE: gorilych/dst
    <<: *build_docker_image
  httpbin:
    environment:
      BUILD_CONTEXT: httpbin
      IMAGE: gorilych/httpbin
    <<: *build_docker_image
  deploy_httpbin:
    docker:
    # any image wit git will work
    - image: alpine/git:1.0.7
    steps:
    - checkout
    - run:
        name: update image tag in httpbin-config-repo
        environment:
          CONFIG_REPO: git@github.com:scalio/httpbin-config-repo.git
          # CONFIG_REPO_SSH_KEY64: from CircleCI project
          VALUES_FILE: values-httpbin.scaliolabs.com.yaml
          GIT_SSH_COMMAND: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i ~/.ssh/config_repo_key
        command: |
          IMAGE_TAG=$(cat httpbin/tag)
          mkdir -p ~/.ssh/
          : > ~/.ssh/config_repo_key
          chmod 600 ~/.ssh/config_repo_key
          echo -n "${CONFIG_REPO_SSH_KEY64}" | base64 -d >> ~/.ssh/config_repo_key
          git clone ${CONFIG_REPO} __config_repo__ && cd __config_repo__
          sed -i 's/^    tag:.*/    tag: '${IMAGE_TAG}'/' ${VALUES_FILE}
          git config user.name "CircleCI/${CIRCLE_PROJECT_USERNAME}"
          git config user.email ''
          git commit ${VALUES_FILE} -F- <<-EOFMESSAGE
          set image tag to ${IMAGE_TAG}

          Commit from CircleCI triggered by
           build: ${CIRCLE_BUILD_URL}
           commit: ${CIRCLE_SHA1}
           tag: ${CIRCLE_TAG}
           branch: ${CIRCLE_BRANCH}
           repo: ${CIRCLE_REPOSITORY_URL}
           user: ${CIRCLE_PROJECT_USERNAME}
          EOFMESSAGE
          git push

